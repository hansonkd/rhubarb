(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{3525:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return a(2855)}])},5484:function(e,t,a){"use strict";var n=a(2322);t.Z={logo:(0,n.jsx)("span",{children:"Rhubarb Documentation"}),project:{link:"https://github.com/hansonkd/rhubarb"},docsRepositoryBase:"https://github.com/hansonkd/rhubarb"}},2855:function(e,t,a){"use strict";a.r(t);var n=a(2322),i=a(8287),s=a(6582),r=a(5484);a(6908);var d=a(5392);a(6577);let o={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/index.mdx",route:"/",headings:[{depth:1,value:"Rhubarb - The Funky Sweet Python Framework Built With Strawberry GraphQL",id:"rhubarb---the-funky-sweet-python-framework-built-with-strawberry-graphql"},{depth:2,value:"Rhubarb at a glance",id:"rhubarb-at-a-glance"},{depth:2,value:"Extra Rhubarb Features",id:"extra-rhubarb-features"},{depth:2,value:"Automatic SQL Optimizations",id:"automatic-sql-optimizations"},{depth:2,value:"Package Status",id:"package-status"},{depth:2,value:"Researched by GetDynasty",id:"researched-by-getdynasty"}],timestamp:1684534015e3,pageMap:[{kind:"Meta",data:{index:"Rhubarb",getting_started:"Getting Started",tables:"Working with Tables",fields:"Fields and Relations",auth:"User Authentication",pkg:"Other Integrations",advanced:"Advanced Usage",github_link:{title:"Github",href:"https://github.com/hansonkd/rhubarb"}}},{kind:"Folder",name:"advanced",route:"/advanced",children:[{kind:"Meta",data:{"default-where-clause":"Automatic Filtering","sql-functions":"SQL Functions",multi:"Multiple Selections without GQL","field-permissions":"Column and Field Permissions"}},{kind:"MdxPage",name:"default-where-clause",route:"/advanced/default-where-clause"},{kind:"MdxPage",name:"field-permissions",route:"/advanced/field-permissions"},{kind:"MdxPage",name:"multi",route:"/advanced/multi"},{kind:"MdxPage",name:"sql-functions",route:"/advanced/sql-functions"}]},{kind:"Folder",name:"auth",route:"/auth",children:[{kind:"Meta",data:{using:"Adding User Auth",impersonate:"Impersonating Users"}},{kind:"MdxPage",name:"impersonate",route:"/auth/impersonate"},{kind:"MdxPage",name:"using",route:"/auth/using"}]},{kind:"Folder",name:"contrib",route:"/contrib",children:[{kind:"MdxPage",name:"arq-tasks",route:"/contrib/arq-tasks"},{kind:"MdxPage",name:"auditing",route:"/contrib/auditing"},{kind:"MdxPage",name:"email",route:"/contrib/email"},{kind:"MdxPage",name:"redis",route:"/contrib/redis"},{kind:"MdxPage",name:"starlette",route:"/contrib/starlette"},{kind:"MdxPage",name:"webauthn",route:"/contrib/webauthn"},{kind:"Meta",data:{"arq-tasks":"Arq Tasks",auditing:"Auditing",email:"Email",redis:"Redis",starlette:"Starlette",webauthn:"Webauthn"}}]},{kind:"Folder",name:"fields",route:"/fields",children:[{kind:"Meta",data:{virtual_columns:"Virtual Columns and Fields",relations:"Relations and References to other Models",mutations:"Mutations",aggregations:"Aggregations","python-based-fields":"Computations in Python"}},{kind:"MdxPage",name:"aggregations",route:"/fields/aggregations"},{kind:"MdxPage",name:"mutations",route:"/fields/mutations"},{kind:"MdxPage",name:"python-based-fields",route:"/fields/python-based-fields"},{kind:"MdxPage",name:"relations",route:"/fields/relations"},{kind:"MdxPage",name:"virtual_columns",route:"/fields/virtual_columns"}]},{kind:"Folder",name:"getting_started",route:"/getting_started",children:[{kind:"Meta",data:{installation:"Installation","basic-usage":"Basic Usage","querying-data":"Querying Data",config:"Environment Configuration",optimizations:"Optimizations"}},{kind:"MdxPage",name:"basic-usage",route:"/getting_started/basic-usage"},{kind:"MdxPage",name:"config",route:"/getting_started/config"},{kind:"MdxPage",name:"installation",route:"/getting_started/installation"},{kind:"MdxPage",name:"optimizations",route:"/getting_started/optimizations"},{kind:"MdxPage",name:"querying-data",route:"/getting_started/querying-data"}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"tables",route:"/tables",children:[{kind:"Meta",data:{table_basics:"Table Basics",base_models:"Base Models",migrations:"Migrations",types:"Python and SQL Types",custom_types:"Custom Types","public-private-schemas":"Private and Public Schemas"}},{kind:"MdxPage",name:"base_models",route:"/tables/base_models"},{kind:"MdxPage",name:"custom_types",route:"/tables/custom_types"},{kind:"MdxPage",name:"migrations",route:"/tables/migrations"},{kind:"MdxPage",name:"public-private-schemas",route:"/tables/public-private-schemas"},{kind:"MdxPage",name:"table_basics",route:"/tables/table_basics"},{kind:"MdxPage",name:"types",route:"/tables/types"}]}],flexsearch:{codeblocks:!0},title:"Rhubarb - The Funky Sweet Python Framework Built With Strawberry GraphQL"},pageNextRoute:"/",nextraLayout:s.ZP,themeConfig:r.Z};function l(e){let t=Object.assign({h1:"h1",p:"p",em:"em",h2:"h2",ul:"ul",li:"li",code:"code",a:"a"},(0,d.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:"Rhubarb - The Funky Sweet Python Framework Built With Strawberry GraphQL"}),"\n",(0,n.jsx)(t.p,{children:"Rhubarb is an ORM baked from scratch focused on automatic optimizations with Postgres data using GQL."}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("img",{width:"100%",alt:"Rhubarb-Strawberry Pie",src:"https://user-images.githubusercontent.com/496914/235881083-f47d21ff-2462-46f9-acc2-e900316fe05f.png"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Strawberry-Rhubarb Pie... Tasty!"})}),"\n",(0,n.jsx)(t.h2,{id:"rhubarb-at-a-glance",children:"Rhubarb at a glance"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Asyncio Native"}),"\n",(0,n.jsx)(t.li,{children:"Build SQL Queries with Python"}),"\n",(0,n.jsx)(t.li,{children:"Built on GraphQL for optimization layer on nested queries"}),"\n",(0,n.jsx)(t.li,{children:"Migrations - Automatically generate Schema changes as your data model updates."}),"\n",(0,n.jsx)(t.li,{children:"Intuitively Solve N+1 without even realizing it"}),"\n",(0,n.jsx)(t.li,{children:"Simplify Aggregations / Joins / Subqueries"}),"\n",(0,n.jsx)(t.li,{children:"Heavily inspired by Django and built with the philosophy of take the best parts."}),"\n",(0,n.jsx)(t.li,{children:"Native Public / Private Schema dichotomy"}),"\n",(0,n.jsx)(t.li,{children:"Pass User and Extra info to use in queries through Strawberry Info's context."}),"\n",(0,n.jsx)(t.li,{children:"Doesn't use any other Python ORM for DB access, only Psycopg3"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"extra-rhubarb-features",children:"Extra Rhubarb Features"}),"\n",(0,n.jsx)(t.p,{children:"Rhubarb comes with some extra integrations to make using the ORM easy..."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"HTTP - FastAPI / Starlette"}),"\n",(0,n.jsx)(t.li,{children:"Redis - Rate Limiting / Caching"}),"\n",(0,n.jsx)(t.li,{children:"Auth - Impersonate / Sessions / Users / WebAuthN / Password"}),"\n",(0,n.jsx)(t.li,{children:"Security - CORS / CSRF / Field Level Security / Auth Rate Limits"}),"\n",(0,n.jsx)(t.li,{children:"Auditing - Record all Mutations / Queries / Subscriptions / Custom Events"}),"\n",(0,n.jsx)(t.li,{children:"Tasks Queue - Chron and one off tasks offloaded to worker processes using arq."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"automatic-sql-optimizations",children:"Automatic SQL Optimizations"}),"\n",(0,n.jsx)(t.p,{children:"Currently, Rhubarb does a few optimizations that cover most uses:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Selecting only the columns being asked for in the current GQL query"}),"\n",(0,n.jsx)(t.li,{children:"Inlining joins that don't produce more rows."}),"\n",(0,n.jsx)(t.li,{children:"Managing exploding cartesian products from m:n joins"}),"\n",(0,n.jsx)(t.li,{children:"Pushing Aggregates to Subquery"}),"\n",(0,n.jsxs)(t.li,{children:["Combining aggregates if they use same ",(0,n.jsx)(t.code,{children:"GROUP BY"})]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"package-status",children:"Package Status"}),"\n",(0,n.jsx)(t.p,{children:"This is an experimental package for researching new ways in Python to interact with Postgres and build apps. Take care."}),"\n",(0,n.jsx)(t.h2,{id:"researched-by-getdynasty",children:"Researched by GetDynasty"}),"\n",(0,n.jsxs)(t.p,{children:["This package was created with the help of research resources provided by ",(0,n.jsx)(t.a,{href:"https://www.getdynasty.com?utm_source=github",children:"Dynasty Living Trusts"}),". GetDynasty is the only online platform that offers instant Living Trust Creation. GetDynasty is not actively involved in the maintenance or development of this project."]})]})}t.default=(0,i.j)(o)}},function(e){e.O(0,[774,282,888,179],function(){return e(e.s=3525)}),_N_E=e.O()}]);